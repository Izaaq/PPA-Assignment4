#BlueJ class context
comment0.target=Statistics
comment0.text=\r\n\ This\ class\ keeps\ track\ of\ statistics\ based\ around\ the\ properties.\r\n\ \r\n\ @author\ Izaaq\ bin\ Ahmad\ Izham,\ Mohamad\ Imran\ bin\ Yaacob,\ Jian\ Han\ Tey,\ Guan\ Yi\ Tang\r\n
comment1.params=
comment1.target=Statistics()
comment1.text=\r\n\ Constructor\ for\ objects\ of\ class\ Statistics.\r\n
comment10.params=
comment10.target=double\ getAverageReviewPerProperty()
comment11.params=
comment11.target=java.lang.String\ getMostExpensiveBorough()
comment12.params=
comment12.target=java.lang.String\ getBoroughWithMostReviews()
comment13.params=
comment13.target=int\ getTotalHomeAndApartments()
comment14.params=
comment14.target=double\ getAveragePropertyPrice()
comment15.params=
comment15.target=java.lang.String\ getPropertyWithMostMinimumNights()
comment16.params=
comment16.target=java.lang.String\ getPropertyWithMostReviews()
comment17.params=
comment17.target=int\ calculateTotalAvailableProperties()
comment17.text=\r\n\ This\ method\ calculates\ the\ total\ available\ properties\ within\ specified\ price\ range.\r\n
comment18.params=
comment18.target=double\ averageReviewPerProperty()
comment18.text=\r\n\ Calculates\ the\ average\ reviews\ for\ one\ property.\r\n
comment19.params=
comment19.target=java.lang.String\ calculateMostExpensiveBorough()
comment19.text=\r\n\ Calculates\ the\ most\ expensive\ borough\ by\ finding\ the\ borough\ with\ the\ most\ expensive\ average\ price.\r\n
comment2.params=
comment2.target=java.util.ArrayList\ getListings()
comment2.text=\r\n\ Get\ the\ list\ of\ properties\ within\ the\ selected\ price\ range.\r\n\ @return\ The\ list\ of\ properties\ within\ the\ selected\ price\ range.\r\n
comment20.params=
comment20.target=java.lang.String\ calculateBoroughWithMostReviews()
comment20.text=\r\n\ \ calculates\ borough\ with\ most\ reviews\ from\ Airbnb\ data.\r\n
comment21.params=
comment21.target=int\ totalHomeAndApartments()
comment21.text=\r\n\ Calculates\ the\ total\ number\ of\ home\ and\ apartments.\r\n
comment22.params=
comment22.target=double\ averagePropertyPrice()
comment22.text=\r\n\ Calculates\ the\ average\ property\ price\ of\ Home\ and\ Apartments.\r\n
comment23.params=
comment23.target=java.lang.String\ propertyWithMostMinimumNights()
comment23.text=\r\n\ Calculate\ the\ name\ of\ the\ property\ with\ most\ number\ of\ nights\ along\ with\ the\ borough\r\n
comment24.params=
comment24.target=java.lang.String\ propertyWithMostReviews()
comment24.text=\r\n\ Calculates\ the\ property\ with\ the\ most\ reviews\ along\ with\ the\ borough.\r\n
comment25.params=
comment25.target=java.util.Map\ getBoroughToNumOfProperty()
comment25.text=\r\n\ Returns\ a\ map\ that\ maps\ borough\ name\ to\ the\ number\ of\ properties\ available\ (availability\ >\ 0).\ This\ is\ not\ displayed\r\n\ in\ the\ statistics\ panel.\r\n\ @return\ A\ map\ that\ maps\ borough\ name\ to\ the\ number\ of\ properties\ available\ (availability\ >\ 0).\r\n
comment26.params=boroughsToPropertyCount
comment26.target=int\ getHighestPropertyCount(java.util.Map)
comment26.text=\r\n\ Returns\ the\ highest\ number\ of\ property\ available\ in\ a\ borough.\ Not\ displayed.\r\n\ @param\ boroughsToPropertyCount\ A\ map\ that\ maps\ the\ boroughs\ to\ the\ number\ of\ properties\ in\ that\ borough.\r\n\ @return\ The\ highest\ available\ property\ count\ as\ an\ int.\r\n
comment27.params=boroughName
comment27.target=java.util.ArrayList\ getListingsInBorough(java.lang.String)
comment27.text=\r\n\ This\ method\ returns\ a\ list\ of\ available\ properties\ (availability\ >\ 0)\ within\ the\ price\ range\ by\ borough.\r\n\ @return\ A\ list\ of\ available\ properties\ within\ the\ price\ range\ by\ borough.\r\n
comment28.params=boroughsToAveragePrice
comment28.target=void\ getAveragePricePerBorough(java.util.Map)
comment28.text=\r\n\ Calculates\ the\ average\ price\ of\ properties\ per\ borough.\ This\ is\ not\ displayed.\r\n\ @param\ boroughsToAveragePrice\ A\ mapping\ that\ maps\ the\ borough\ to\ the\ average\ price.\r\n
comment3.params=minPrice
comment3.target=void\ setMinPrice(int)
comment3.text=\r\n\ This\ method\ sets\ the\ minimum\ price\ of\ the\ price\ range\ to\ list\ properties\ from.\r\n\ @param\ minPrice\ The\ minimum\ price\ for\ the\ price\ range\ to\ list\ properties\ from.\r\n
comment4.params=maxPrice
comment4.target=void\ setMaxPrice(int)
comment4.text=\r\n\ This\ method\ sets\ the\ maximum\ price\ of\ the\ price\ range\ to\ list\ properties\ from.\r\n\ @param\ maxPrice\ The\ maximum\ price\ for\ the\ price\ range\ to\ list\ properties\ from.\r\n
comment5.params=minPrice\ maxPrice
comment5.target=void\ setPrices(int,\ int)
comment5.text=\r\n\ This\ method\ sets\ both\ the\ minimum\ and\ maximum\ price\ at\ the\ same\ time\ for\ convenience.\r\n\ @param\ minPrice\ The\ minimum\ price\ for\ the\ price\ range\ to\ list\ properties\ from.\r\n\ @param\ maxPrice\ The\ maximum\ price\ for\ the\ price\ range\ to\ list\ properties\ from.\r\n
comment6.params=
comment6.target=void\ loadListings()
comment6.text=\r\n\ This\ method\ loads\ all\ of\ the\ data\ in\ the\ SCSV\ file\ regardless\ of\ price.\r\n
comment7.params=
comment7.target=void\ loadListingsWithRange()
comment7.text=\r\n\ This\ method\ loads\ only\ the\ data\ within\ the\ price\ range\ selected.\r\n
comment8.params=
comment8.target=void\ updateStatistics()
comment8.text=\r\n\ Recalculates\ all\ the\ statistics\ to\ be\ displayed.\r\n
comment9.params=
comment9.target=int\ getTotalAvailableProperties()
numComments=29
